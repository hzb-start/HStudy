<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>nuc.hzb</groupId>
  <artifactId>Maven1</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <name>Maven1</name>
  
  <dependencies>
<!--   	我们通过maven构建项目还发现jar包升级出现有意思的情况
  	junit4.0只有一个jar包：junit-4.0.jar 
  	junit4.12则出现两个jar包：junit-4.12.jar、hamcrest-core-1.3.jar 
  	这可以证明maven会帮我们自动去仓库去找到jar包的依赖 -->
  
  	<!-- <dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.0</version>
		<scope>test</scope>
	</dependency> -->
	<dependency>
		<groupId>junit</groupId>
		<artifactId>junit</artifactId>
		<version>4.12</version>
		<!--测试传递依赖  -->
    	<!--compile可以实现依赖，其它则不可以  -->
		<scope>compile</scope>
		<!-- <scope>test</scope> -->
	</dependency>
	
	<dependency>
    	<groupId>commons-fileupload</groupId>
    	<artifactId>commons-fileupload</artifactId>
    	<version>1.4</version>
    	<exclusions>
    		<exclusion>
    			<groupId>commons-io</groupId>
    			<artifactId>commons-io</artifactId>
    		</exclusion>
    	</exclusions>
	</dependency>
	
  </dependencies>
  
</project>